<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--配置SQL映射-->
<mapper namespace="mapper.EmployeeMapperDynamicSQL">

    <!--  public List<Employee> getEmpsByConditionIfWhere(Employee Condition);  -->
    <select id="getEmpsByConditionIfWhere" resultType="beans.Employee">
        select id,last_name,email,gender from tb1_employee
        <!--where 1=1-->
        <where> <!-- 在SQL语句中提供where关键字，并且要解决第一个出现的and或者是or的问题 -->
            <if test="id!=null">
                and id = #{id}
            </if>
            <if test="lastName!=null&amp;&amp;lastName!=&quot;&quot;">
                and last_name = #{lastName}
            </if>
            <if test="email!=null and email.trim() != ''">
                and email = #{email}
            </if>
            <if test="gender==0 or gender == 1">
                and gender = #{gender}
            </if>
        </where>
    </select>

    <!--  public List<Employee> getEmpsByConditionTrim(Employee Condition);  -->
    <select id="getEmpsByConditionTrim" resultType="beans.Employee">
        select id,last_name,email,gender from tb1_employee
        <trim prefix="where" suffixOverrides="and|or">
            <if test="id!=null">
                id = #{id} and
            </if>
            <if test="lastName!=null&amp;&amp;lastName!=&quot;&quot;">
                last_name = #{lastName} and
            </if>
            <if test="email!=null and email.trim() != ''">
                email = #{email} or
            </if>
            <if test="gender==0 or gender == 1">
                gender = #{gender}
            </if>
        </trim>
    </select>

    <!--  public void updateEmpByConditionSet(Employee Condition);  -->
    <update id="updateEmpByConditionSet">
        update tb1_employee
        <set>
            <if test="lastName != null">last_name = #{lastName},</if>
            <if test="email != null">email = #{email},</if>
            <if test="gender == 0 or gender == 1">gender = #{gender}</if>
        </set>
        where id = #{id}
    </update>

    <!--  public List<Employee> getEmpsByConditionChoose(Employee Condition);  -->
    <select id="getEmpsByConditionChoose" resultType="beans.Employee">
        select id,last_name,email,gender
        from tb1_employee
        where
        <choose>
            <when test="id!=null">id=#{id}</when>
            <when test="lastName!=null">last_name=#{lastName}</when>
            <when test="email!=null">email=#{email}</when>
            <otherwise>gender=0</otherwise>
        </choose>
    </select>

    <!--  public List<Employee> getEmpsByIds(@Param("ids")List<Integer> ids);  -->
    <select id="getEmpsByIds" resultType="beans.Employee">
        select id,last_name,email,gender from tb1_employee
        where id in
            <foreach collection="ids" item="currId" open="(" close=")" separator=",">
                #{currId}
            </foreach>
    </select>

    <!--  public void  addEmps(@Param("emps")List<Employee> emps );  -->
    <insert id="addEmps">
        insert into tb1_employee(last_name,email,gender) values
        <foreach collection="emps" item="emp" separator=",">
            (#{emp.lastName},#{emp.email},#{emp.gender})
        </foreach>
    </insert>

</mapper>